worker_processes 1;

events { 
    worker_connections 1024; 
}

http {
    upstream auth_service {
        server auth_service:3000;  # The service1 container
    }

    upstream rooms_service {
        server rooms_service:3004;  # The service1 container
    }

    upstream frontend_service {
        server frontend_service:3000;  # The service1 container
    }

    # upstream notifications_service {
    #     server service2:3001;  # The service2 container
    # }

    server {
        listen 80;

        location / {
            proxy_pass http://frontend_service;
        }

        location /api/v1/auth/ {
            proxy_pass http://auth_service/auth/;
            rewrite ^/auth/(.*)$ /$1 break;  
        }

        location /api/v1/users/ {
            proxy_pass http://auth_service/users/;
            rewrite ^/users/(.*)$ /$1 break;  
        }

        # Route /api/service2 to service2
        location /api/v1/rooms/ {
            proxy_pass http://rooms_service/rooms/;
            rewrite ^/rooms/(.*)$ /$1 break;  
        }

        # Optionally set headers for API requests
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
